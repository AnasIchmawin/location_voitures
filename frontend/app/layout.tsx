"use client";
import "./css/style.css";

import { Inter } from "next/font/google";
import localFont from "next/font/local";
import Head from "next/head";
import { usePathname } from "next/navigation";

import { ThemeProvider, useTheme } from "../context/context";
import Header from "@/components/ui/header";
import React from "react";
import Sidebar from "@/components/ui/sidebar";
import ProtectedRoute from "@/components/ProtectedRoute";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
  display: "swap",
});

const nacelle = localFont({
  src: [
    {
      path: "../public/fonts/nacelle-regular.woff2",
      weight: "400",
      style: "normal",
    },
    {
      path: "../public/fonts/nacelle-italic.woff2",
      weight: "400",
      style: "italic",
    },
    {
      path: "../public/fonts/nacelle-semibold.woff2",
      weight: "600",
      style: "normal",
    },
    {
      path: "../public/fonts/nacelle-semibolditalic.woff2",
      weight: "600",
      style: "italic",
    },
  ],
  variable: "--font-nacelle",
  display: "swap",
});

const metadata = {
  title: "LocAuto Pro",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
    const { isDarkMode, setIsDarkMode } = useTheme();
  const pathname = usePathname();
  const unprotectedRoutes = ["/", "/signup", "/signin", "/reset-password"];
  const isProtectedRoute = !unprotectedRoutes.includes(pathname);

  return (
    <html lang="en">
      <Head>
        <title>{metadata.title}</title>
        <meta name="description" content={metadata.description} />
      </Head>
      <body
        className={`${inter.variable} ${nacelle.variable} ${
          isDarkMode ? "bg-gray-950" : "bg-white"
        } font-inter text-base text-gray-200 antialiased`}
      >
        {isProtectedRoute ? (
          <ThemeProvider>
        <ProtectedRoute>
          <div className="flex min-h-screen">
            <div>
          <Sidebar />
            </div>
            <div className="flex flex-col w-full">
          <Header />
          <div className="w-[100%] mx-auto">{children}</div>
            </div>
          </div>
        </ProtectedRoute>
          </ThemeProvider>
        ) : (
          <ThemeProvider>
        <Header />
        <div className="w-[100%] mx-auto">{children}</div>
          </ThemeProvider>
        )}
      </body>
    </html>
  );
}
